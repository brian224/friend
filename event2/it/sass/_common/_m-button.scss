.m-button {
    line-height : 20px;
    position    : relative;
    @include inline-block-space;
    @include box-sizing(border-box);
    @include transition(background $transition-times);

    

    &.is-arrow {
        &:after {
            content      : "";
            width        : 0;
            height       : 0;
            border-style : solid;
            border-color : transparent transparent transparent $color-black;
            position     : relative;
            @include inline-block;
        }
    }

    > * {
        @include inline-block;
    }
}

@include respond(Desktops) {
    .m-button {
        padding : 10px 45px;

        &:hover {
            @each $key, $value in $color {
                &.b-bg-#{$key} {
                    background : darken($value, 5%) !important;
                }
            }
        }

        &.is-arrow {
            &:after {
                margin-left  : 10px;
                border-width : 5px 0 5px 10px;
            }
        }

        > * {
            &:not(:first-child) {
                margin-left : 10px;
            }
        }
    }
}

@include respond(Desktops-Tablets) {}

@include respond(Tablets-Mobiles) {}

@include respond(Tablets) {
    .m-button {
        padding : units(8px, $tablet-min-width, 1vw) units(32px, $tablet-min-width, 1vw);

        &.is-arrow {
            &:after {
                margin-left  : units(8px, $tablet-min-width, 1vw);
                border-width : units(4px, $tablet-min-width, 1vw) 0 units(4px, $tablet-min-width, 1vw) units(8px, $tablet-min-width, 1vw);
            }
        }

        > * {
            &:not(:first-child) {
                margin-left : units(8px, $tablet-min-width, 1vw);
            }
        }
    }
}

@include respond(Mobiles) {
    .m-button {
        padding : units(5px, $mobile-min-width, 1vw) units(20px, $mobile-min-width, 1vw);

        &.is-arrow {
            &:after {
                margin-left  : units(5px, $mobile-min-width, 1vw);
                border-width : units(3px, $mobile-min-width, 1vw) 0 units(3px, $mobile-min-width, 1vw) units(5px, $mobile-min-width, 1vw);
            }
        }

        > * {
            &:not(:first-child) {
                margin-left : units(5px, $mobile-min-width, 1vw);
            }
        }
    }
}